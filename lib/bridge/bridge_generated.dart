// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.65.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'dart:ffi' as ffi;

class NativeImpl implements Native {
  final NativePlatform _platform;
  factory NativeImpl(ExternalLibrary dylib) =>
      NativeImpl.raw(NativePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory NativeImpl.wasm(FutureOr<WasmModule> module) =>
      NativeImpl(module as ExternalLibrary);
  NativeImpl.raw(this._platform);
  Future<AWSProfile> getAwsCredential(
      {required AWSProfile profile, String? mfaCode, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_aws_profile(profile);
    var arg1 = _platform.api2wire_opt_String(mfaCode);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_get_aws_credential(port_, arg0, arg1),
      parseSuccessData: _wire2api_aws_profile,
      constMeta: kGetAwsCredentialConstMeta,
      argValues: [profile, mfaCode],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetAwsCredentialConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "get_aws_credential",
        argNames: ["profile", "mfaCode"],
      );

  Future<List<S3Bucket>> s3ListBuckets(
      {required AWSProfile profile, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_aws_profile(profile);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_s3_list_buckets(port_, arg0),
      parseSuccessData: _wire2api_list_s_3_bucket,
      constMeta: kS3ListBucketsConstMeta,
      argValues: [profile],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kS3ListBucketsConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "s3_list_buckets",
        argNames: ["profile"],
      );

  Future<List<S3Object>> s3ListObjects(
      {required AWSProfile profile,
      required S3Bucket bucket,
      String? prefix,
      dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_aws_profile(profile);
    var arg1 = _platform.api2wire_box_autoadd_s_3_bucket(bucket);
    var arg2 = _platform.api2wire_opt_String(prefix);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_s3_list_objects(port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_list_s_3_object,
      constMeta: kS3ListObjectsConstMeta,
      argValues: [profile, bucket, prefix],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kS3ListObjectsConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "s3_list_objects",
        argNames: ["profile", "bucket", "prefix"],
      );

  Future<bool> s3CreateFolder(
      {required AWSProfile profile,
      required String bucketName,
      required String prefix,
      dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_aws_profile(profile);
    var arg1 = _platform.api2wire_String(bucketName);
    var arg2 = _platform.api2wire_String(prefix);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_s3_create_folder(port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_bool,
      constMeta: kS3CreateFolderConstMeta,
      argValues: [profile, bucketName, prefix],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kS3CreateFolderConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "s3_create_folder",
        argNames: ["profile", "bucketName", "prefix"],
      );

  Future<bool> s3UploadFile(
      {required AWSProfile profile,
      required String bucketName,
      String? prefix,
      required String filePath,
      dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_aws_profile(profile);
    var arg1 = _platform.api2wire_String(bucketName);
    var arg2 = _platform.api2wire_opt_String(prefix);
    var arg3 = _platform.api2wire_String(filePath);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_s3_upload_file(port_, arg0, arg1, arg2, arg3),
      parseSuccessData: _wire2api_bool,
      constMeta: kS3UploadFileConstMeta,
      argValues: [profile, bucketName, prefix, filePath],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kS3UploadFileConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "s3_upload_file",
        argNames: ["profile", "bucketName", "prefix", "filePath"],
      );

  Future<bool> s3DeleteObjects(
      {required AWSProfile profile,
      required String bucketName,
      required List<String> prefixes,
      dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_aws_profile(profile);
    var arg1 = _platform.api2wire_String(bucketName);
    var arg2 = _platform.api2wire_StringList(prefixes);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_s3_delete_objects(port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_bool,
      constMeta: kS3DeleteObjectsConstMeta,
      argValues: [profile, bucketName, prefixes],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kS3DeleteObjectsConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "s3_delete_objects",
        argNames: ["profile", "bucketName", "prefixes"],
      );

  Future<List<String>> s3GetObjects(
      {required AWSProfile profile,
      required String bucketName,
      required List<String> prefixes,
      required S3GetObjectConfig config,
      dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_aws_profile(profile);
    var arg1 = _platform.api2wire_String(bucketName);
    var arg2 = _platform.api2wire_StringList(prefixes);
    var arg3 = _platform.api2wire_box_autoadd_s_3_get_object_config(config);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) =>
          _platform.inner.wire_s3_get_objects(port_, arg0, arg1, arg2, arg3),
      parseSuccessData: _wire2api_StringList,
      constMeta: kS3GetObjectsConstMeta,
      argValues: [profile, bucketName, prefixes, config],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kS3GetObjectsConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "s3_get_objects",
        argNames: ["profile", "bucketName", "prefixes", "config"],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  List<String> _wire2api_StringList(dynamic raw) {
    return (raw as List<dynamic>).cast<String>();
  }

  AWSProfile _wire2api_aws_profile(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 7)
      throw Exception('unexpected arr length: expect 7 but see ${arr.length}');
    return AWSProfile(
      name: _wire2api_String(arr[0]),
      region: _wire2api_String(arr[1]),
      accessKeyId: _wire2api_String(arr[2]),
      secretAccessKey: _wire2api_String(arr[3]),
      sessionToken: _wire2api_opt_String(arr[4]),
      mfaSerial: _wire2api_opt_String(arr[5]),
      expiration: _wire2api_opt_String(arr[6]),
    );
  }

  bool _wire2api_bool(dynamic raw) {
    return raw as bool;
  }

  int _wire2api_box_autoadd_i64(dynamic raw) {
    return _wire2api_i64(raw);
  }

  int _wire2api_i64(dynamic raw) {
    return castInt(raw);
  }

  List<S3Bucket> _wire2api_list_s_3_bucket(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_s_3_bucket).toList();
  }

  List<S3Object> _wire2api_list_s_3_object(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_s_3_object).toList();
  }

  String? _wire2api_opt_String(dynamic raw) {
    return raw == null ? null : _wire2api_String(raw);
  }

  int? _wire2api_opt_box_autoadd_i64(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_i64(raw);
  }

  S3Bucket _wire2api_s_3_bucket(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return S3Bucket(
      name: _wire2api_String(arr[0]),
      createdAt: _wire2api_opt_String(arr[1]),
      location: _wire2api_String(arr[2]),
    );
  }

  S3Object _wire2api_s_3_object(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 5)
      throw Exception('unexpected arr length: expect 5 but see ${arr.length}');
    return S3Object(
      key: _wire2api_String(arr[0]),
      lastModified: _wire2api_opt_String(arr[1]),
      size: _wire2api_opt_box_autoadd_i64(arr[2]),
      storageClass: _wire2api_opt_String(arr[3]),
      isFolder: _wire2api_bool(arr[4]),
    );
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }
}

// Section: api2wire

@protected
bool api2wire_bool(bool raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer

class NativePlatform extends FlutterRustBridgeBase<NativeWire> {
  NativePlatform(ffi.DynamicLibrary dylib) : super(NativeWire(dylib));

// Section: api2wire

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_StringList> api2wire_StringList(List<String> raw) {
    final ans = inner.new_StringList_0(raw.length);
    for (var i = 0; i < raw.length; i++) {
      ans.ref.ptr[i] = api2wire_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_AWSProfile> api2wire_box_autoadd_aws_profile(
      AWSProfile raw) {
    final ptr = inner.new_box_autoadd_aws_profile_0();
    _api_fill_to_wire_aws_profile(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_S3Bucket> api2wire_box_autoadd_s_3_bucket(S3Bucket raw) {
    final ptr = inner.new_box_autoadd_s_3_bucket_0();
    _api_fill_to_wire_s_3_bucket(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_S3GetObjectConfig>
      api2wire_box_autoadd_s_3_get_object_config(S3GetObjectConfig raw) {
    final ptr = inner.new_box_autoadd_s_3_get_object_config_0();
    _api_fill_to_wire_s_3_get_object_config(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_opt_String(String? raw) {
    return raw == null ? ffi.nullptr : api2wire_String(raw);
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }
// Section: finalizer

// Section: api_fill_to_wire

  void _api_fill_to_wire_aws_profile(
      AWSProfile apiObj, wire_AWSProfile wireObj) {
    wireObj.name = api2wire_String(apiObj.name);
    wireObj.region = api2wire_String(apiObj.region);
    wireObj.access_key_id = api2wire_String(apiObj.accessKeyId);
    wireObj.secret_access_key = api2wire_String(apiObj.secretAccessKey);
    wireObj.session_token = api2wire_opt_String(apiObj.sessionToken);
    wireObj.mfa_serial = api2wire_opt_String(apiObj.mfaSerial);
    wireObj.expiration = api2wire_opt_String(apiObj.expiration);
  }

  void _api_fill_to_wire_box_autoadd_aws_profile(
      AWSProfile apiObj, ffi.Pointer<wire_AWSProfile> wireObj) {
    _api_fill_to_wire_aws_profile(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_s_3_bucket(
      S3Bucket apiObj, ffi.Pointer<wire_S3Bucket> wireObj) {
    _api_fill_to_wire_s_3_bucket(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_s_3_get_object_config(
      S3GetObjectConfig apiObj, ffi.Pointer<wire_S3GetObjectConfig> wireObj) {
    _api_fill_to_wire_s_3_get_object_config(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_s_3_bucket(S3Bucket apiObj, wire_S3Bucket wireObj) {
    wireObj.name = api2wire_String(apiObj.name);
    wireObj.created_at = api2wire_opt_String(apiObj.createdAt);
    wireObj.location = api2wire_String(apiObj.location);
  }

  void _api_fill_to_wire_s_3_get_object_config(
      S3GetObjectConfig apiObj, wire_S3GetObjectConfig wireObj) {
    wireObj.save_dir = api2wire_opt_String(apiObj.saveDir);
    wireObj.zip_for_folder = api2wire_bool(apiObj.zipForFolder);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.

/// generated by flutter_rust_bridge
class NativeWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>(
          'get_dart_object');
  late final _get_dart_object =
      _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>(
          'drop_dart_object');
  late final _drop_dart_object =
      _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr =
      _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>(
          'new_dart_opaque');
  late final _new_dart_opaque =
      _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr =
      _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>(
          'init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  void wire_get_aws_credential(
    int port_,
    ffi.Pointer<wire_AWSProfile> profile,
    ffi.Pointer<wire_uint_8_list> mfa_code,
  ) {
    return _wire_get_aws_credential(
      port_,
      profile,
      mfa_code,
    );
  }

  late final _wire_get_aws_credentialPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_AWSProfile>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_get_aws_credential');
  late final _wire_get_aws_credential = _wire_get_aws_credentialPtr.asFunction<
      void Function(
          int, ffi.Pointer<wire_AWSProfile>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_s3_list_buckets(
    int port_,
    ffi.Pointer<wire_AWSProfile> profile,
  ) {
    return _wire_s3_list_buckets(
      port_,
      profile,
    );
  }

  late final _wire_s3_list_bucketsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_AWSProfile>)>>('wire_s3_list_buckets');
  late final _wire_s3_list_buckets = _wire_s3_list_bucketsPtr
      .asFunction<void Function(int, ffi.Pointer<wire_AWSProfile>)>();

  void wire_s3_list_objects(
    int port_,
    ffi.Pointer<wire_AWSProfile> profile,
    ffi.Pointer<wire_S3Bucket> bucket,
    ffi.Pointer<wire_uint_8_list> prefix,
  ) {
    return _wire_s3_list_objects(
      port_,
      profile,
      bucket,
      prefix,
    );
  }

  late final _wire_s3_list_objectsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_AWSProfile>,
              ffi.Pointer<wire_S3Bucket>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_s3_list_objects');
  late final _wire_s3_list_objects = _wire_s3_list_objectsPtr.asFunction<
      void Function(int, ffi.Pointer<wire_AWSProfile>,
          ffi.Pointer<wire_S3Bucket>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_s3_create_folder(
    int port_,
    ffi.Pointer<wire_AWSProfile> profile,
    ffi.Pointer<wire_uint_8_list> bucket_name,
    ffi.Pointer<wire_uint_8_list> prefix,
  ) {
    return _wire_s3_create_folder(
      port_,
      profile,
      bucket_name,
      prefix,
    );
  }

  late final _wire_s3_create_folderPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_AWSProfile>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_s3_create_folder');
  late final _wire_s3_create_folder = _wire_s3_create_folderPtr.asFunction<
      void Function(int, ffi.Pointer<wire_AWSProfile>,
          ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_s3_upload_file(
    int port_,
    ffi.Pointer<wire_AWSProfile> profile,
    ffi.Pointer<wire_uint_8_list> bucket_name,
    ffi.Pointer<wire_uint_8_list> prefix,
    ffi.Pointer<wire_uint_8_list> file_path,
  ) {
    return _wire_s3_upload_file(
      port_,
      profile,
      bucket_name,
      prefix,
      file_path,
    );
  }

  late final _wire_s3_upload_filePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_AWSProfile>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_s3_upload_file');
  late final _wire_s3_upload_file = _wire_s3_upload_filePtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_AWSProfile>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>)>();

  void wire_s3_delete_objects(
    int port_,
    ffi.Pointer<wire_AWSProfile> profile,
    ffi.Pointer<wire_uint_8_list> bucket_name,
    ffi.Pointer<wire_StringList> prefixes,
  ) {
    return _wire_s3_delete_objects(
      port_,
      profile,
      bucket_name,
      prefixes,
    );
  }

  late final _wire_s3_delete_objectsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_AWSProfile>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_StringList>)>>('wire_s3_delete_objects');
  late final _wire_s3_delete_objects = _wire_s3_delete_objectsPtr.asFunction<
      void Function(int, ffi.Pointer<wire_AWSProfile>,
          ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_StringList>)>();

  void wire_s3_get_objects(
    int port_,
    ffi.Pointer<wire_AWSProfile> profile,
    ffi.Pointer<wire_uint_8_list> bucket_name,
    ffi.Pointer<wire_StringList> prefixes,
    ffi.Pointer<wire_S3GetObjectConfig> config,
  ) {
    return _wire_s3_get_objects(
      port_,
      profile,
      bucket_name,
      prefixes,
      config,
    );
  }

  late final _wire_s3_get_objectsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_AWSProfile>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_StringList>,
              ffi.Pointer<wire_S3GetObjectConfig>)>>('wire_s3_get_objects');
  late final _wire_s3_get_objects = _wire_s3_get_objectsPtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_AWSProfile>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_StringList>,
          ffi.Pointer<wire_S3GetObjectConfig>)>();

  ffi.Pointer<wire_StringList> new_StringList_0(
    int len,
  ) {
    return _new_StringList_0(
      len,
    );
  }

  late final _new_StringList_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_StringList> Function(ffi.Int32)>>(
      'new_StringList_0');
  late final _new_StringList_0 = _new_StringList_0Ptr
      .asFunction<ffi.Pointer<wire_StringList> Function(int)>();

  ffi.Pointer<wire_AWSProfile> new_box_autoadd_aws_profile_0() {
    return _new_box_autoadd_aws_profile_0();
  }

  late final _new_box_autoadd_aws_profile_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_AWSProfile> Function()>>(
          'new_box_autoadd_aws_profile_0');
  late final _new_box_autoadd_aws_profile_0 = _new_box_autoadd_aws_profile_0Ptr
      .asFunction<ffi.Pointer<wire_AWSProfile> Function()>();

  ffi.Pointer<wire_S3Bucket> new_box_autoadd_s_3_bucket_0() {
    return _new_box_autoadd_s_3_bucket_0();
  }

  late final _new_box_autoadd_s_3_bucket_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_S3Bucket> Function()>>(
          'new_box_autoadd_s_3_bucket_0');
  late final _new_box_autoadd_s_3_bucket_0 = _new_box_autoadd_s_3_bucket_0Ptr
      .asFunction<ffi.Pointer<wire_S3Bucket> Function()>();

  ffi.Pointer<wire_S3GetObjectConfig>
      new_box_autoadd_s_3_get_object_config_0() {
    return _new_box_autoadd_s_3_get_object_config_0();
  }

  late final _new_box_autoadd_s_3_get_object_config_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_S3GetObjectConfig> Function()>>(
      'new_box_autoadd_s_3_get_object_config_0');
  late final _new_box_autoadd_s_3_get_object_config_0 =
      _new_box_autoadd_s_3_get_object_config_0Ptr
          .asFunction<ffi.Pointer<wire_S3GetObjectConfig> Function()>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_0(
    int len,
  ) {
    return _new_uint_8_list_0(
      len,
    );
  }

  late final _new_uint_8_list_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_uint_8_list> Function(
              ffi.Int32)>>('new_uint_8_list_0');
  late final _new_uint_8_list_0 = _new_uint_8_list_0Ptr
      .asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>(
          'free_WireSyncReturn');
  late final _free_WireSyncReturn =
      _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();
}

class _Dart_Handle extends ffi.Opaque {}

class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

class wire_AWSProfile extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_uint_8_list> region;

  external ffi.Pointer<wire_uint_8_list> access_key_id;

  external ffi.Pointer<wire_uint_8_list> secret_access_key;

  external ffi.Pointer<wire_uint_8_list> session_token;

  external ffi.Pointer<wire_uint_8_list> mfa_serial;

  external ffi.Pointer<wire_uint_8_list> expiration;
}

class wire_S3Bucket extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_uint_8_list> created_at;

  external ffi.Pointer<wire_uint_8_list> location;
}

class wire_StringList extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_uint_8_list>> ptr;

  @ffi.Int32()
  external int len;
}

class wire_S3GetObjectConfig extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> save_dir;

  @ffi.Bool()
  external bool zip_for_folder;
}

typedef DartPostCObjectFnType = ffi.Pointer<
    ffi.NativeFunction<ffi.Bool Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;
